buildscript {
    ext {
        springBootVersion = '1.5.11.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.owasp:dependency-check-gradle:3.2.1'
    }
}

plugins {
    id "org.sonarqube" version "2.6"
    id "base"
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: "jacoco"
apply plugin: 'org.owasp.dependencycheck'
jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        // html.enabled true
        html.destination "${buildDir}/reports/coverage"
    }
}


group = 'com.dhp.automation'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.jcraft:jsch:0.1.50')
    compile('com.googlecode.json-simple:json-simple:1.1')
    compile('commons-codec:commons-codec:1.9')
    compile('io.springfox:springfox-swagger2:2.7.0')
    compile('io.springfox:springfox-swagger-ui:2.7.0')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.springframework.boot:spring-boot-starter-actuator')
}
project.ext{
    cucumberVersion = '1.2.4'
    springTestVersion = '4.0.5.RELEASE'
    junitVersion = '4.12'

}


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'info.cukes:cucumber-java8:' + cucumberVersion
    testCompile 'info.cukes:cucumber-junit:' + cucumberVersion
    testCompile 'junit:junit:' + junitVersion

}

dependencyCheck {
    format='ALL'
}

configurations {
    cucumberRuntime.extendsFrom testRuntime
}
task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            //src/test/resources/features/Network/ReceivedFileNetworkURL.feature
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.deanhealth.automation', 'src/test/resources/features/'+featureName]
        }
    }
}
task cucumberAll() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            //src/test/resources/features/Network/ReceivedFileNetworkURL.feature
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.deanhealth.automation', 'src/test/resources/features/']
        }
    }
}
test{
    exclude '**/automation/**'
}
task unitTests(type: Test) {
    exclude '**/automation/**'
}
task automatedTests(type: Test) {
    include '**/automation/**'
}
